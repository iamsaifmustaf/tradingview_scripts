study("HMA/EMA/VWAP/MFI/RSI", shorttitle="HMA/EMA/VWAP/MFI/RSI", overlay = true)

slope_period = input(1, title="Slope Period")
src = hlc3

//Moving Average Inputs - HMA
H1length = input(3, title="Hull 1 Length", minval=1)
H2length = input(5, title="Hull 2 Length", minval=1)
H3length = input(7, title="Hull 3 Length", minval=1)
H4length = input(9, title="Hull 4 Length", minval=1)
H5length = input(11, title="Hull 5 Length", minval=1)
H6length = input(21, title="Hull 6 Length", minval=1)
H7length = input(3, title="Hull 7 Length", minval=1)
H8length = input(5, title="Hull 8 Length", minval=1)
H9length = input(7, title="Hull 9 Length", minval=1)
H10length = input(9, title="Hull 10 Length", minval=1)
H11length = input(11, title="Hull 11 Length", minval=1)
H12length = input(21, title="Hull 12 Length", minval=1)

//Moving Average Inputs - EMA
ema1length = input(2, title="ema1 Length", minval=1)
ema2length = input(3, title="ema2 Length", minval=1)
ema3length = input(5, title="ema3 Length", minval=1)
ema4length = input(8, title="ema4 Length", minval=1)
ema5length = input(13, title="ema5 Length", minval=1)
ema6length = input(21, title="ema6 Length", minval=1)
ema7length = input(34, title="ema7 Length", minval=1)
ema8length = input(55, title="ema8 Length", minval=1)
ema9length = input(89, title="ema9 Length", minval=1)
ema10length = input(144, title="ema10 Length", minval=1)
ema11length = input(233, title="ema11 Length", minval=1)
ema12length = input(377, title="ema12 Length", minval=1)

//Moving Average Inputs - SMA
sma1length = input(2, title="sma1 Length", minval=1)
sma2length = input(3, title="sma2 Length", minval=1)
sma3length = input(5, title="sma3 Length", minval=1)
sma4length = input(8, title="sma4 Length", minval=1)
sma5length = input(13, title="sma5 Length", minval=1)
sma6length = input(21, title="sma6 Length", minval=1)
sma7length = input(34, title="sma7 Length", minval=1)
sma8length = input(55, title="sma8 Length", minval=1)
sma9length = input(89, title="sma9 Length", minval=1)
sma10length = input(144, title="sma10 Length", minval=1)
sma11length = input(233, title="sma11 Length", minval=1)
sma12length = input(377, title="sma12 Length", minval=1)

//VWAP Inputs
devUp1 = input(1.28, title="Stdev above (1)")
devDn1 = input(1.28, title="Stdev below (1)")

devUp2 = input(2.01, title="Stdev above (2)")
devDn2 = input(2.01, title="Stdev below (2)")

devUp3 = input(2.51, title="Stdev above (3)")
devDn3 = input(2.51, title="Stdev below (3)")

devUp4 = input(3.09, title="Stdev above (4)")
devDn4 = input(3.09, title="Stdev below (4)")

devUp5 = input(4.01, title="Stdev above (5)")
devDn5 = input(4.01, title="Stdev below (5)")

showDv2 = input(true, type=bool, title="Show second group of bands?")
showDv3 = input(true, type=bool, title="Show third group of bands?")
showDv4 = input(false, type=bool, title="Show fourth group of bands?")
showDv5 = input(false, type=bool, title="Show fifth group of bands?")

//Support Resistance Inputs
left = input(20, title="LEFT")
right = input(20, title="RIGHT")

//MFI Inputs
lengthMFI1 = input(title="Length MFI 1", type=input.integer, defval=8, minval=1, maxval=2000)
lengthMFI2 = input(title="Length MFI 2", type=input.integer, defval=13, minval=1, maxval=2000)
lengthMFI3 = input(title="Length MFI 3", type=input.integer, defval=21, minval=1, maxval=2000)

lengthMFIHMA1 = input(3, title="MFI AVERAGE LENGTH HMA1", minval=1)
lengthMFIHMA2 = input(5, title="MFI AVERAGE LENGTH HMA2", minval=1)
lengthMFIHMA3 = input(8, title="MFI AVERAGE LENGTH HMA3", minval=1)
lengthMFIHMA4 = input(13, title="MFI AVERAGE LENGTH HMA4", minval=1)
lengthMFIHMA5 = input(34, title="MFI AVERAGE LENGTH HMA5", minval=1)

lengthMFIEMA1 = input(13, title="MFI AVERAGE LENGTH EMA1", minval=1)
lengthMFIEMA2 = input(55, title="MFI AVERAGE LENGTH EMA1", minval=1)

//RSI INPUTS
lenRSI1 = input(6, minval=1, title="RSI 1 Length")
lenRSI2 = input(13, minval=1, title="RSI 2 Length")
lenRSI3 = input(21, minval=1, title="RSI 3 Length")

lengthRSIHMA1 = input(3, title="RSI AVERAGE LENGTH HMA1", minval=1)
lengthRSIHMA2 = input(5, title="RSI AVERAGE LENGTH HMA2", minval=1)
lengthRSIHMA3 = input(8, title="RSI AVERAGE LENGTH HMA3", minval=1)
lengthRSIHMA4 = input(13, title="RSI AVERAGE LENGTH HMA4", minval=1)
lengthRSIHMA5 = input(34, title="RSI AVERAGE LENGTH HMA5", minval=1)

lengthRSIEMA1 = input(8, title="RSI AVERAGE LENGTH EMA1", minval=1)
lengthRSIEMA2 = input(21, title="RSI AVERAGE LENGTH EMA2", minval=1)

srcRSI = input(close, "Source RSI", type = input.source)

//Support Resistance Calculations
hih = pivothigh(high, left, right)
lol = pivotlow(low, left, right)

top = valuewhen(hih, high[right], 0)
bot = valuewhen(lol, low[right], 0)

//RSI CALCULATIONS
up1 = rma(max(change(srcRSI), 0), lenRSI1)
down1 = rma(-min(change(srcRSI), 0), lenRSI1)
up2 = rma(max(change(srcRSI), 0), lenRSI2)
down2 = rma(-min(change(srcRSI), 0), lenRSI2)
up3 = rma(max(change(srcRSI), 0), lenRSI3)
down3 = rma(-min(change(srcRSI), 0), lenRSI3)

rsi1 = down1 == 0 ? 100 : up1 == 0 ? 0 : 100 - (100 / (1 + up1 / down1))
rsi2 = down2 == 0 ? 100 : up2 == 0 ? 0 : 100 - (100 / (1 + up2 / down2))
rsi3 = down3 == 0 ? 100 : up3 == 0 ? 0 : 100 - (100 / (1 + up3 / down3))
avgrsi = (rsi1 + rsi2 + rsi3) / 3

//HMA of RSI
hmaRSI1 = wma(2*wma(avgrsi, lengthRSIHMA1/2)-wma(avgrsi, lengthRSIHMA1), round(sqrt(lengthRSIHMA1)))

hmaRSI2 = wma(2*wma(avgrsi, lengthRSIHMA2/2)-wma(avgrsi, lengthRSIHMA2), round(sqrt(lengthRSIHMA2)))

hmaRSI3 = wma(2*wma(avgrsi, lengthRSIHMA3/2)-wma(avgrsi, lengthRSIHMA3), round(sqrt(lengthRSIHMA3)))

hmaRSI4 = wma(2*wma(avgrsi, lengthRSIHMA4/2)-wma(avgrsi, lengthRSIHMA4), round(sqrt(lengthRSIHMA4)))

hmaRSI5 = wma(2*wma(avgrsi, lengthRSIHMA5/2)-wma(avgrsi, lengthRSIHMA5), round(sqrt(lengthRSIHMA5)))

//EMA1 of avgrsi
emaRSI1 = ema(avgrsi, lengthRSIEMA1)

//Slope of EMA1
emaRSI1Slope = (emaRSI1 - emaRSI1[slope_period]) / slope_period

//EMA2 of avgrsi
emaRSI2 = ema(avgrsi, lengthRSIEMA2)

//Slope of EMA2
emaRSI2Slope = (emaRSI2 - emaRSI2[slope_period]) / slope_period

//AVERAGE MOVING AVERAGE (AMA) of RSI
amaRSI = (hmaRSI1 + hmaRSI2 + hmaRSI3 + hmaRSI4 + hmaRSI5) / 5

//Slope of AMA
amaRSISlope = (amaRSI - amaRSI[slope_period]) / slope_period

//MFI CALCULATIONS
upper1 = sum(volume * (change(src) <= 0 ? 0 : src), lengthMFI1)
lower1 = sum(volume * (change(src) >= 0 ? 0 : src), lengthMFI1)
upper2 = sum(volume * (change(src) <= 0 ? 0 : src), lengthMFI2)
lower2 = sum(volume * (change(src) >= 0 ? 0 : src), lengthMFI2)
upper3 = sum(volume * (change(src) <= 0 ? 0 : src), lengthMFI3)
lower3 = sum(volume * (change(src) >= 0 ? 0 : src), lengthMFI3)
_rsi(upper, lower) =>
    if lower == 0
        100
    if upper == 0
        0
	100.0 - (100.0 / (1.0 + upper / lower))
mf1 = _rsi(upper1, lower1)
mf2 = _rsi(upper2, lower2)
mf3 = _rsi(upper3, lower3)
mfAvg = (mf1 + mf2 + mf3) / 3

//Moving Average
hmaMFI1 = wma(2*wma(mfAvg, lengthMFIHMA1/2)-wma(mfAvg, lengthMFIHMA1), round(sqrt(lengthMFIHMA1)))

hmaMFI2 = wma(2*wma(mfAvg, lengthMFIHMA2/2)-wma(mfAvg, lengthMFIHMA2), round(sqrt(lengthMFIHMA2)))

hmaMFI3 = wma(2*wma(mfAvg, lengthMFIHMA3/2)-wma(mfAvg, lengthMFIHMA3), round(sqrt(lengthMFIHMA3)))

hmaMFI4 = wma(2*wma(mfAvg, lengthMFIHMA4/2)-wma(mfAvg, lengthMFIHMA4), round(sqrt(lengthMFIHMA4)))

hmaMFI5 = wma(2*wma(mfAvg, lengthMFIHMA5/2)-wma(mfAvg, lengthMFIHMA5), round(sqrt(lengthMFIHMA5)))

//EMA1 of MFG
emaMFI1 = ema(mfAvg, lengthMFIEMA1)

//Slope of EMA1
emaMFI1Slope = (emaMFI1 - emaMFI1[slope_period]) / slope_period

//EMA2 of MFG
emaMFI2 = ema(mfAvg, lengthMFIEMA2)

//Slope of EMA2
emaMFI2Slope = (emaMFI2 - emaMFI2[slope_period]) / slope_period

//AMA of MFI
amaMFI = (hmaMFI1 + hmaMFI2 + hmaMFI3 + hmaMFI4 + hmaMFI5) / 5

//Slope of AMA
amaMFISlope = (amaMFI - amaMFI[slope_period]) / slope_period

//HMA Calculations
hma1 = wma(2 * wma(open, H2length / 2) - wma(open, H2length), round(sqrt(H2length)))
hma2 = wma(2 * wma(open, H2length / 2) - wma(open, H2length), round(sqrt(H2length)))
hma3 = wma(2 * wma(open, H3length / 2) - wma(open, H3length), round(sqrt(H3length)))
hma4 = wma(2 * wma(open, H4length / 2) - wma(open, H4length), round(sqrt(H4length)))
hma5 = wma(2 * wma(open, H5length / 2) - wma(open, H5length), round(sqrt(H5length)))
hma6 = wma(2 * wma(open, H6length / 2) - wma(open, H6length), round(sqrt(H6length)))
hma7 = wma(2 * wma(open, H1length / 2) - wma(open, H1length), round(sqrt(H1length)))
hma8 = wma(2 * wma(open, H2length / 2) - wma(open, H2length), round(sqrt(H2length)))
hma9 = wma(2 * wma(open, H3length / 2) - wma(open, H3length), round(sqrt(H3length)))
hma10 = wma(2 * wma(open, H4length / 2) - wma(open, H4length), round(sqrt(H4length)))
hma11 = wma(2 * wma(open, H5length / 2) - wma(open, H5length), round(sqrt(H5length)))
hma12 = wma(2 * wma(open, H6length / 2) - wma(open, H6length), round(sqrt(H6length)))
hmaAverage = (hma1 + hma2 + hma3 + hma4 + hma5 + hma6 + hma7 + hma8 + hma9 + hma10 + hma11 + hma12) / 12

//Slope of HMA
slopehma1 = (hma1 - hma1[slope_period]) / slope_period
slopehma2 = (hma2 - hma2[slope_period]) / slope_period
slopehma3 = (hma3 - hma3[slope_period]) / slope_period
slopehma4 = (hma4 - hma4[slope_period]) / slope_period
slopehma5 = (hma5 - hma5[slope_period]) / slope_period
slopehma6 = (hma6 - hma6[slope_period]) / slope_period
slopehma7 = (hma7 - hma7[slope_period]) / slope_period
slopehma8 = (hma8 - hma8[slope_period]) / slope_period
slopehma9 = (hma9 - hma9[slope_period]) / slope_period
slopehma10 = (hma10 - hma10[slope_period]) / slope_period
slopehma11 = (hma11 - hma11[slope_period]) / slope_period
slopehma12 = (hma12 - hma12[slope_period]) / slope_period
hmaAverageSlope = (hmaAverage - hmaAverage[slope_period]) / slope_period

//EMA and SMA Calculations
ema1 = ema(close, ema1length)
ema2 = ema(close, ema2length)
ema3 = ema(close, ema3length)
ema4 = ema(close, ema4length)
ema5 = ema(close, ema5length)
ema6 = ema(close, ema6length)
ema7 = ema(close, ema7length)
ema8 = ema(close, ema8length)
ema9 = ema(close, ema9length)
ema10 = ema(close, ema10length)
ema11 = ema(close, ema11length)
ema12 = ema(close, ema12length)
emaAvg = (ema1 + ema2 + ema3 + ema4 + ema5 + ema6 + ema7 + ema8 + ema9 + ema10 + ema11 + ema12) / 12

slopeema1 = (ema1 - ema1[slope_period]) / slope_period
slopeema2 = (ema2 - ema2[slope_period]) / slope_period
slopeema3 = (ema3 - ema3[slope_period]) / slope_period
slopeema4 = (ema4 - ema4[slope_period]) / slope_period
slopeema5 = (ema5 - ema5[slope_period]) / slope_period
slopeema6 = (ema6 - ema6[slope_period]) / slope_period
slopeema7 = (ema7 - ema7[slope_period]) / slope_period
slopeema8 = (ema8 - ema8[slope_period]) / slope_period
slopeema9 = (ema9 - ema9[slope_period]) / slope_period
slopeema10 = (ema10 - ema10[slope_period]) / slope_period
slopeema11 = (ema11 - ema11[slope_period]) / slope_period
slopeema12 = (ema12 - ema12[slope_period]) / slope_period
slopeemaAvg = (emaAvg - emaAvg[slope_period]) / slope_period

//VWAP Calculations and Plot
showPrevVWAP = input(false, type=bool, title="Show previous VWAP close")

start = security(tickerid, "D", time)

newSession = iff(change(start), 1, 0)

vwapsum = iff(newSession, hl2*volume, vwapsum[1]+hl2*volume)
volumesum = iff(newSession, volume, volumesum[1]+volume)
v2sum = iff(newSession, volume*hl2*hl2, v2sum[1]+volume*hl2*hl2)
myvwap = vwapsum/volumesum
dev = sqrt(max(v2sum/volumesum - myvwap*myvwap, 0))

A=plot(myvwap,style=circles, title="VWAP", color=black)
U1=plot(myvwap + devUp1 * dev,style=circles, title="VWAP Upper", color=gray)
D1=plot(myvwap - devDn1 * dev, style=circles, title="VWAP Lower", color=gray)

U2=plot(showDv2 ? myvwap + devUp2 * dev : na, color=red, title="VWAP Upper (2)")
D2=plot(showDv2 ? myvwap - devDn2 * dev : na, color=green, title="VWAP Lower (2)")

U3=plot(showDv3 ? myvwap + devUp3 * dev : na, title="VWAP Upper (3)", color=red)
D3=plot(showDv3 ? myvwap - devDn3 * dev : na, title="VWAP Lower (3)", color=green)

U4=plot(showDv4 ? myvwap + devUp4 * dev : na, title="VWAP Upper (4)", color=red)
D4=plot(showDv4 ? myvwap - devDn4 * dev : na, title="VWAP Lower (4)", color=green)

U5=plot(showDv5 ? myvwap + devUp5 * dev : na, title="VWAP Upper (5)", color=red)
D5=plot(showDv5 ? myvwap - devDn5 * dev : na, title="VWAP Lower (5)", color=green)
prevwap = iff(newSession, myvwap[1], prevwap[1])
plot(showPrevVWAP ? prevwap : na, style=circles, color=close > prevwap ? green : red)


fill(U1, U2, color=red, transp=90, title="Over Bought Fill 1")
fill(D1, D2, color=green, transp=90, title="Over Sold Fill 1")
fill(U2, U3, color=red, transp=90, title="Over Bought Fill 2")
fill(D2, D3, color=green, transp=90, title="Over Sold Fill 2")
fill(U3, U4, color=red, transp=90, title="Over Bought Fill 3")
fill(D3, D4, color=green, transp=90, title="Over Sold Fill 3")
fill(U4, U5, color=red, transp=90, title="Over Bought Fill 4")
fill(D4, D5, color=green, transp=90, title="Over Sold Fill 4")
fill(A, U1, color=gray, transp=90, title="Middle Fill Up")
fill(A, D1, color=gray, transp=90, title="Middle Fill Down")

//Plot Support Resistance

res =plot(top, "TOP", color=top != top[1] ? na : #dc143c, offset=-left, linewidth=2, transp=0)
sup =plot(bot,"BOTTOM", color=bot != bot[1] ? na : #00ced1, offset=-left, linewidth=2, transp=0)
plot(top,"TOP", offset=-left)
plot(bot,"BOTTOM", offset=-left)

plot(ema1, "EMA1", color=slopeema1 > 0 ? green : red, linewidth=2, transp=50)
plot(ema2, "EMA2",  color=slopeema2 > 0 ? green : red, linewidth=2, transp=55)
plot(ema3, "EMA3",  color=slopeema3 > 0 ? green : red, linewidth=2, transp=60)
plot(ema4, "EMA4", color=slopeema4 > 0 ? green : red, linewidth=2, transp=65)
plot(ema5, "EMA5",  color=slopeema5 > 0 ? green : red, linewidth=2, transp=70)
plot(ema6, "EMA6", color=slopeema6 > 0 ? green : red, linewidth=2, transp=75)
plot(ema7, "EMA7", color=slopeema7 > 0 ? green : red, linewidth=2, transp=80)
plot(ema8, "EMA8", color=slopeema8 > 0 ? green : red, linewidth=2, transp=85)
plot(ema9, "EMA9",  color=slopeema9 > 0 ? green : red, linewidth=2, transp=90)
plot(ema10, "EMA10",  color=slopeema10 > 0 ? green : red, linewidth=2, transp=90)
plot(ema11, "EMA11", color=slopeema11 > 0 ? green : red, linewidth=2, transp=90)
plot(ema12, "EMA12",  color=slopeema12 > 0 ? green : red, linewidth=2, transp=90)

//PLOT background colors

bgcolor( emaRSI1Slope < 0 and emaRSI2Slope < 0  and emaMFI1Slope < 0 and emaMFI2Slope < 0 ? color.red : color.green, editable=false, title="Direction Changes", transp=80)


//fill(p1, p2, title = "Background", color=#198787, transp=95)

//Plot HMA
// plot(hma1, "HMA1", color=slopehma1 > 0 ? green : red, linewidth=2, transp=50)
// plot(hma2, "HMA2",  color=slopehma2 > 0 ? green : red, linewidth=2, transp=55)
// plot(hma3, "HMA3",  color=slopehma3 > 0 ? green : red, linewidth=2, transp=60)
// plot(hma4, "HMA4", color=slopehma4 > 0 ? green : red, linewidth=2, transp=65)
// plot(hma5, "HMA5",  color=slopehma5 > 0 ? green : red, linewidth=2, transp=70)
// plot(hma6, "HMA6", color=slopehma6 > 0 ? green : red, linewidth=2, transp=75)
// plot(hma7, "HMA7", color=slopehma7 > 0 ? green : red, linewidth=2, transp=80)
// plot(hma8, "HMA8",  color=slopehma8 > 0 ? green : red, linewidth=2, transp=85)
// plot(hma9, "HMA9",  color=slopehma9 > 0 ? green : red, linewidth=2, transp=90)
// plot(hma10, "HMA10", color=slopehma10 > 0 ? green : red, linewidth=2, transp=90)
// plot(hma11, "HMA11",  color=slopehma11 > 0 ? green : red, linewidth=2, transp=90)
// plot(hma12, "HMA12", color=slopehma12 > 0 ? green : red, linewidth=2, transp=90)
// plot(hmaAverage, "AVG HMA", color=hmaAverageSlope > 0 ? green : red, linewidth=15, transp=70)

///plot(emaAvg, "EMA AVG", color=slopeemaAvg > 0 ? green : red, linewidth=2, transp=60)

//Plot VWAP
